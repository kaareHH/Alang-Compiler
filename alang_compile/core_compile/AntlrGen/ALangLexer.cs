//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:/Source/Repos/p4-compiler/alang_compile/core_compile\ALang.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AntlrGen {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class ALangLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, ENDIF=3, ENDREPEAT=4, ENDTERM=5, PIPE=6, IF=7, REPEAT=8, 
		TIMES=9, THEN=10, TYPE=11, EQUAL=12, OPERATOR=13, INTEGERS=14, PIN=15, 
		TOGGLE=16, ALANGFILENAME=17, ID=18, WHITESPACE=19;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "ENDIF", "ENDREPEAT", "ENDTERM", "PIPE", "IF", "REPEAT", 
		"TIMES", "THEN", "TYPE", "EQUAL", "OPERATOR", "INTEGERS", "DIGITS", "PIN", 
		"TOGGLE", "ALANGFILENAME", "ID", "UPPERCASE", "LOWERCASE", "WHITESPACE"
	};


	public ALangLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ALangLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'function'", "'import'", "'endif'", "'endrepeat'", "';'", "'|'", 
		"'if'", "'repeat'", "'times'", "'then'", null, "'='"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, "ENDIF", "ENDREPEAT", "ENDTERM", "PIPE", "IF", "REPEAT", 
		"TIMES", "THEN", "TYPE", "EQUAL", "OPERATOR", "INTEGERS", "PIN", "TOGGLE", 
		"ALANGFILENAME", "ID", "WHITESPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "ALang.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static ALangLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x15', '\xAE', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', 
		'\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', 
		'\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', 
		'\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x5', 
		'\f', 'p', '\n', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', 
		'\xE', '\x3', '\xF', '\x3', '\xF', '\x5', '\xF', 'x', '\n', '\xF', '\x3', 
		'\x10', '\x3', '\x10', '\a', '\x10', '|', '\n', '\x10', '\f', '\x10', 
		'\xE', '\x10', '\x7F', '\v', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', 
		'\x11', '\x5', '\x11', '\x84', '\n', '\x11', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x5', '\x12', '\x8B', '\n', 
		'\x12', '\x3', '\x13', '\x6', '\x13', '\x8E', '\n', '\x13', '\r', '\x13', 
		'\xE', '\x13', '\x8F', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', 
		'\x14', '\x6', '\x14', '\x9B', '\n', '\x14', '\r', '\x14', '\xE', '\x14', 
		'\x9C', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', '\x3', '\x16', '\x3', 
		'\x17', '\x3', '\x17', '\x5', '\x17', '\xA5', '\n', '\x17', '\x3', '\x17', 
		'\x3', '\x17', '\x6', '\x17', '\xA9', '\n', '\x17', '\r', '\x17', '\xE', 
		'\x17', '\xAA', '\x3', '\x17', '\x3', '\x17', '\x2', '\x2', '\x18', '\x3', 
		'\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', 
		'\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', 
		'\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x2', '!', '\x11', '#', 
		'\x12', '%', '\x13', '\'', '\x14', ')', '\x2', '+', '\x2', '-', '\x15', 
		'\x3', '\x2', '\a', '\x5', '\x2', ',', '-', '/', '/', '\x31', '\x31', 
		'\x5', '\x2', '\x32', ';', '\x43', '\\', '\x63', '|', '\x3', '\x2', '\x43', 
		'\\', '\x3', '\x2', '\x63', '|', '\x4', '\x2', '\v', '\v', '\"', '\"', 
		'\x2', '\xB7', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\'', '\x3', '\x2', '\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '/', '\x3', '\x2', '\x2', '\x2', '\x5', '\x38', '\x3', '\x2', '\x2', 
		'\x2', '\a', '?', '\x3', '\x2', '\x2', '\x2', '\t', '\x45', '\x3', '\x2', 
		'\x2', '\x2', '\v', 'O', '\x3', '\x2', '\x2', '\x2', '\r', 'Q', '\x3', 
		'\x2', '\x2', '\x2', '\xF', 'S', '\x3', '\x2', '\x2', '\x2', '\x11', 'V', 
		'\x3', '\x2', '\x2', '\x2', '\x13', ']', '\x3', '\x2', '\x2', '\x2', '\x15', 
		'\x63', '\x3', '\x2', '\x2', '\x2', '\x17', 'o', '\x3', '\x2', '\x2', 
		'\x2', '\x19', 'q', '\x3', '\x2', '\x2', '\x2', '\x1B', 's', '\x3', '\x2', 
		'\x2', '\x2', '\x1D', 'w', '\x3', '\x2', '\x2', '\x2', '\x1F', 'y', '\x3', 
		'\x2', '\x2', '\x2', '!', '\x83', '\x3', '\x2', '\x2', '\x2', '#', '\x8A', 
		'\x3', '\x2', '\x2', '\x2', '%', '\x8D', '\x3', '\x2', '\x2', '\x2', '\'', 
		'\x9A', '\x3', '\x2', '\x2', '\x2', ')', '\x9E', '\x3', '\x2', '\x2', 
		'\x2', '+', '\xA0', '\x3', '\x2', '\x2', '\x2', '-', '\xA8', '\x3', '\x2', 
		'\x2', '\x2', '/', '\x30', '\a', 'h', '\x2', '\x2', '\x30', '\x31', '\a', 
		'w', '\x2', '\x2', '\x31', '\x32', '\a', 'p', '\x2', '\x2', '\x32', '\x33', 
		'\a', '\x65', '\x2', '\x2', '\x33', '\x34', '\a', 'v', '\x2', '\x2', '\x34', 
		'\x35', '\a', 'k', '\x2', '\x2', '\x35', '\x36', '\a', 'q', '\x2', '\x2', 
		'\x36', '\x37', '\a', 'p', '\x2', '\x2', '\x37', '\x4', '\x3', '\x2', 
		'\x2', '\x2', '\x38', '\x39', '\a', 'k', '\x2', '\x2', '\x39', ':', '\a', 
		'o', '\x2', '\x2', ':', ';', '\a', 'r', '\x2', '\x2', ';', '<', '\a', 
		'q', '\x2', '\x2', '<', '=', '\a', 't', '\x2', '\x2', '=', '>', '\a', 
		'v', '\x2', '\x2', '>', '\x6', '\x3', '\x2', '\x2', '\x2', '?', '@', '\a', 
		'g', '\x2', '\x2', '@', '\x41', '\a', 'p', '\x2', '\x2', '\x41', '\x42', 
		'\a', '\x66', '\x2', '\x2', '\x42', '\x43', '\a', 'k', '\x2', '\x2', '\x43', 
		'\x44', '\a', 'h', '\x2', '\x2', '\x44', '\b', '\x3', '\x2', '\x2', '\x2', 
		'\x45', '\x46', '\a', 'g', '\x2', '\x2', '\x46', 'G', '\a', 'p', '\x2', 
		'\x2', 'G', 'H', '\a', '\x66', '\x2', '\x2', 'H', 'I', '\a', 't', '\x2', 
		'\x2', 'I', 'J', '\a', 'g', '\x2', '\x2', 'J', 'K', '\a', 'r', '\x2', 
		'\x2', 'K', 'L', '\a', 'g', '\x2', '\x2', 'L', 'M', '\a', '\x63', '\x2', 
		'\x2', 'M', 'N', '\a', 'v', '\x2', '\x2', 'N', '\n', '\x3', '\x2', '\x2', 
		'\x2', 'O', 'P', '\a', '=', '\x2', '\x2', 'P', '\f', '\x3', '\x2', '\x2', 
		'\x2', 'Q', 'R', '\a', '~', '\x2', '\x2', 'R', '\xE', '\x3', '\x2', '\x2', 
		'\x2', 'S', 'T', '\a', 'k', '\x2', '\x2', 'T', 'U', '\a', 'h', '\x2', 
		'\x2', 'U', '\x10', '\x3', '\x2', '\x2', '\x2', 'V', 'W', '\a', 't', '\x2', 
		'\x2', 'W', 'X', '\a', 'g', '\x2', '\x2', 'X', 'Y', '\a', 'r', '\x2', 
		'\x2', 'Y', 'Z', '\a', 'g', '\x2', '\x2', 'Z', '[', '\a', '\x63', '\x2', 
		'\x2', '[', '\\', '\a', 'v', '\x2', '\x2', '\\', '\x12', '\x3', '\x2', 
		'\x2', '\x2', ']', '^', '\a', 'v', '\x2', '\x2', '^', '_', '\a', 'k', 
		'\x2', '\x2', '_', '`', '\a', 'o', '\x2', '\x2', '`', '\x61', '\a', 'g', 
		'\x2', '\x2', '\x61', '\x62', '\a', 'u', '\x2', '\x2', '\x62', '\x14', 
		'\x3', '\x2', '\x2', '\x2', '\x63', '\x64', '\a', 'v', '\x2', '\x2', '\x64', 
		'\x65', '\a', 'j', '\x2', '\x2', '\x65', '\x66', '\a', 'g', '\x2', '\x2', 
		'\x66', 'g', '\a', 'p', '\x2', '\x2', 'g', '\x16', '\x3', '\x2', '\x2', 
		'\x2', 'h', 'i', '\a', 'k', '\x2', '\x2', 'i', 'j', '\a', 'p', '\x2', 
		'\x2', 'j', 'p', '\a', 'v', '\x2', '\x2', 'k', 'l', '\a', 'r', '\x2', 
		'\x2', 'l', 'm', '\a', 'k', '\x2', '\x2', 'm', 'p', '\a', 'p', '\x2', 
		'\x2', 'n', 'p', '\x3', '\x2', '\x2', '\x2', 'o', 'h', '\x3', '\x2', '\x2', 
		'\x2', 'o', 'k', '\x3', '\x2', '\x2', '\x2', 'o', 'n', '\x3', '\x2', '\x2', 
		'\x2', 'p', '\x18', '\x3', '\x2', '\x2', '\x2', 'q', 'r', '\a', '?', '\x2', 
		'\x2', 'r', '\x1A', '\x3', '\x2', '\x2', '\x2', 's', 't', '\t', '\x2', 
		'\x2', '\x2', 't', '\x1C', '\x3', '\x2', '\x2', '\x2', 'u', 'x', '\a', 
		'\x32', '\x2', '\x2', 'v', 'x', '\x5', '\x1F', '\x10', '\x2', 'w', 'u', 
		'\x3', '\x2', '\x2', '\x2', 'w', 'v', '\x3', '\x2', '\x2', '\x2', 'x', 
		'\x1E', '\x3', '\x2', '\x2', '\x2', 'y', '}', '\x4', '\x33', ';', '\x2', 
		'z', '|', '\x4', '\x32', ';', '\x2', '{', 'z', '\x3', '\x2', '\x2', '\x2', 
		'|', '\x7F', '\x3', '\x2', '\x2', '\x2', '}', '{', '\x3', '\x2', '\x2', 
		'\x2', '}', '~', '\x3', '\x2', '\x2', '\x2', '~', ' ', '\x3', '\x2', '\x2', 
		'\x2', '\x7F', '}', '\x3', '\x2', '\x2', '\x2', '\x80', '\x84', '\x4', 
		'\x32', ';', '\x2', '\x81', '\x82', '\a', '\x33', '\x2', '\x2', '\x82', 
		'\x84', '\x4', '\x32', '\x35', '\x2', '\x83', '\x80', '\x3', '\x2', '\x2', 
		'\x2', '\x83', '\x81', '\x3', '\x2', '\x2', '\x2', '\x84', '\"', '\x3', 
		'\x2', '\x2', '\x2', '\x85', '\x86', '\a', 'q', '\x2', '\x2', '\x86', 
		'\x8B', '\a', 'p', '\x2', '\x2', '\x87', '\x88', '\a', 'q', '\x2', '\x2', 
		'\x88', '\x89', '\a', 'h', '\x2', '\x2', '\x89', '\x8B', '\a', 'h', '\x2', 
		'\x2', '\x8A', '\x85', '\x3', '\x2', '\x2', '\x2', '\x8A', '\x87', '\x3', 
		'\x2', '\x2', '\x2', '\x8B', '$', '\x3', '\x2', '\x2', '\x2', '\x8C', 
		'\x8E', '\t', '\x3', '\x2', '\x2', '\x8D', '\x8C', '\x3', '\x2', '\x2', 
		'\x2', '\x8E', '\x8F', '\x3', '\x2', '\x2', '\x2', '\x8F', '\x8D', '\x3', 
		'\x2', '\x2', '\x2', '\x8F', '\x90', '\x3', '\x2', '\x2', '\x2', '\x90', 
		'\x91', '\x3', '\x2', '\x2', '\x2', '\x91', '\x92', '\a', '\x30', '\x2', 
		'\x2', '\x92', '\x93', '\a', '\x63', '\x2', '\x2', '\x93', '\x94', '\a', 
		'n', '\x2', '\x2', '\x94', '\x95', '\a', '\x63', '\x2', '\x2', '\x95', 
		'\x96', '\a', 'p', '\x2', '\x2', '\x96', '\x97', '\a', 'i', '\x2', '\x2', 
		'\x97', '&', '\x3', '\x2', '\x2', '\x2', '\x98', '\x9B', '\x5', '+', '\x16', 
		'\x2', '\x99', '\x9B', '\x5', ')', '\x15', '\x2', '\x9A', '\x98', '\x3', 
		'\x2', '\x2', '\x2', '\x9A', '\x99', '\x3', '\x2', '\x2', '\x2', '\x9B', 
		'\x9C', '\x3', '\x2', '\x2', '\x2', '\x9C', '\x9A', '\x3', '\x2', '\x2', 
		'\x2', '\x9C', '\x9D', '\x3', '\x2', '\x2', '\x2', '\x9D', '(', '\x3', 
		'\x2', '\x2', '\x2', '\x9E', '\x9F', '\t', '\x4', '\x2', '\x2', '\x9F', 
		'*', '\x3', '\x2', '\x2', '\x2', '\xA0', '\xA1', '\t', '\x5', '\x2', '\x2', 
		'\xA1', ',', '\x3', '\x2', '\x2', '\x2', '\xA2', '\xA9', '\t', '\x6', 
		'\x2', '\x2', '\xA3', '\xA5', '\a', '\xF', '\x2', '\x2', '\xA4', '\xA3', 
		'\x3', '\x2', '\x2', '\x2', '\xA4', '\xA5', '\x3', '\x2', '\x2', '\x2', 
		'\xA5', '\xA6', '\x3', '\x2', '\x2', '\x2', '\xA6', '\xA9', '\a', '\f', 
		'\x2', '\x2', '\xA7', '\xA9', '\a', '\xF', '\x2', '\x2', '\xA8', '\xA2', 
		'\x3', '\x2', '\x2', '\x2', '\xA8', '\xA4', '\x3', '\x2', '\x2', '\x2', 
		'\xA8', '\xA7', '\x3', '\x2', '\x2', '\x2', '\xA9', '\xAA', '\x3', '\x2', 
		'\x2', '\x2', '\xAA', '\xA8', '\x3', '\x2', '\x2', '\x2', '\xAA', '\xAB', 
		'\x3', '\x2', '\x2', '\x2', '\xAB', '\xAC', '\x3', '\x2', '\x2', '\x2', 
		'\xAC', '\xAD', '\b', '\x17', '\x2', '\x2', '\xAD', '.', '\x3', '\x2', 
		'\x2', '\x2', '\xE', '\x2', 'o', 'w', '}', '\x83', '\x8A', '\x8F', '\x9A', 
		'\x9C', '\xA4', '\xA8', '\xAA', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace AntlrGen
